import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

import { ConvexAuthNextjsServerProvider } from "@convex-dev/auth/nextjs/server";

import { ConvexClientProvider } from "@/components/convex-client-provider";
import { JotaiProvider } from "@/components/jotai-provider";

import { Toaster } from '@/components/ui/sonner'
import { Modals } from "@/components/modals";

/**The data here before the return block is all pre-generated by our create-next-app command and provides our page's 
 * metadata and a couple of TailwindCss values to ensure that the usage of our className entries provides styling as
 * expected.
*/
const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

/**Our return block here should be wrapped in the "ConvexAuthNextjsServerProvider" element, as this is what allows us
 * to use our middleware client for automatic routing and private data protection.
 * 
 * The 'ConvexClientProvider' element should wrap all of our elements that are going to either pull from or push to
 * the database.
 * 
 * The 'Toaster' element is from Sonner and goes just before the main page content, and is what provides our pop-up 
 * toasts that give the user information on background processes such as data creation or field changes via function 
 * or other user.
 * 
 * The 'Modals' element is a simple built toggle to determine whether or not our modals should show up or not, and so
 * must be included here in order to properly function.
 */
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ConvexAuthNextjsServerProvider>

      <html lang='en'>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <ConvexClientProvider>
            <JotaiProvider>
              <Toaster />
              <Modals />
              {children}
            </JotaiProvider>
          </ConvexClientProvider>
        </body>
      </html>
      
    </ConvexAuthNextjsServerProvider>
  );
}
